Git

Definir um endereço de e-mail no Git. Você pode usar seu endereço de e-mail 

git config --global user.email "email@example.com"

git config --global user.nickname "nomeno github"

Confirme que você configurou o endereço de e-mail corretamente no Git:
git config --global user.email
email@example.com



  windows (workspace é um exemplo de pasta)
- cd (change directory) cd / muda para a pasta c:  --- cd windows (vai para  a pasta windows) ---- cd .. (para retroceder para ao anterior) -- cd w+tab (auto completa)
- dir
- mkdir (nome da pasta) (criar uma pasta)
- del/ rmdir (remover o diretório com tudo dentro) + nome da pasta (diretorio) -- rmdir workspace /s /q
cls (para limpar a tela) control+l também
echo - para repetir a palavra (echo hello) - echo hello > hello.txt (> entra ou procura o arquivo com esse nome ou cria

del (nome da pasta) -- del workspace (deleta tudo que está dentro de workspace

seta pra cima do cursor vai procurar os comando usados

abrir git na pasta desktop (botao direito do mouse -open gitbash here)
arquivo de criptografia - openssl sha1 testegit.txt

--stdin (espera receber um arquivo)

unix

- cd
- ls (dir)
- mkdir
- rm -rf
clear (para limpar a tela)



objetos do git

blobs- guarda o sha, bloco basico de composicao, arqivos ficam guardados dentro do bojeto blob, com metadados ex: echo 'conteudo' | git hash-objetct --stdin (devolve o sha1)
echo -e 'conteudo' | openssl sha1
echo -e 'blob 9\0conteudo' | openssl sha1  (9 é o tamanho)

trees- armazena e aponta para o tipo de blob, tb tem metadados, guarda o nome tb do arquivo e tem um sha1 dos metadados das arvores

commits- junta tudo, o q da sentido para o que se faz, aponta para arvore, parente, autor, mensagem

o sha1 desse commit é o hash de toda a essa informação


comandos iniciais

git init - iniciar repositorio do git

git add - mover arquivos e dar inicio ao versionamento

git commit - 


criando uma pasta e arquivo

cd workspace (para entrar na pasta e poder criar pasta)

mkdir livro-receitas

cd livro-receitas (para entrar no arquivo)

git init (para iniciar o git dentro dessa pasta)

ls -a (ver pasta do git)
cd .git (entrar na pasta)
ls (mostar a pasta)

adicionar um arquivo
do tipo markdown (forma mais humana de se escrever um arquivo html)

git add * (pega tudo para ser comitado para ficar em staged)
git commit -m "commit inicial"

git status - vai ajudar a monitorar os status desses arquivos

mv strogonoff.md ./receitas/ e nome do arquivo e da outra pasta (para mover o arquivo para outra pasta)

git add strogonoff.md receitas/  (para adicionar o arquivo modificado e a pasta nova)

git commit -m "cria pasta receitas, move arquivo para receitas"

echo > README.md  (para criar o arquivo)

git config --list (tras lista de todas configuracoes q estao no git)

git config --global --unset user.email (para limpar o email e nome de usuario)

git config --global --unset user.nickname (para limpar o email e nome de usuario)

para adicionar a origem dos arquivos e pastas locais para o repositorio remoto : git remote add origin https://github.com/ErickaMB/livro-receitas.git (e o link do repositorio

git remote -v  (lista os repositorios remotos cadastrados)

git push origin master (sobe as pastas para o repositorio remoto)


git pull origin master(puxa o arquivo remoto para o local)

problemas de merge pega o arquivo, resovle manualmente e envia novamente

git clone https://github.com/cython/cython.git   e copia o local do repositorio para colcocar no bash

depois entra na pasta cd cpython/

ls -a  mostra repositorios ocultos

git rm -r strogonoff.md e nome do arquivo para remover arquivo
